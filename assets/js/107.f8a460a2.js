(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{249:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"remove-linked-list-elements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remove-linked-list-elements","aria-hidden":"true"}},[t._v("#")]),t._v(" Remove Linked List Elements")]),t._v(" "),s("p",[t._v("Remove all elements from a linked list of integers that have value "),s("code",[t._v("val")]),t._v(".")]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Input:  1->2->6->3->4->5->6, val = 6\nOutput: 1->2->3->4->5\n")])])]),s("h2",{attrs:{id:"javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("/**\n * @param {ListNode} head\n * @param {number} val\n * @return {ListNode}\n */")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{attrs:{class:"token function-variable function"}},[t._v("removeElements")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head "),s("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" head"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" val"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        head "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cur "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur "),s("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" val"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cur "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python","aria-hidden":"true"}},[t._v("#")]),t._v(" Python")]),t._v(" "),s("div",{staticClass:"language-Python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# Definition for singly-linked list.")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# class ListNode:")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("#     def __init__(self, x):")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("#         self.val = x")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("#         self.next = None")]),t._v("\n\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Solution")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("removeElements")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" head"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        :type head: ListNode\n        :type val: int\n        :rtype: ListNode\n        """')]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" head "),s("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" head"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" val"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            head "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n        cur "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" cur "),s("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" val"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                cur "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head\n\n")])])])])}],!1,null,null,null);e.options.__file="README.md";a.default=e.exports}}]);