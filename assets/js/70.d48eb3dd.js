(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{302:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"remove-duplicates-from-sorted-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remove-duplicates-from-sorted-list","aria-hidden":"true"}},[t._v("#")]),t._v(" Remove Duplicates from Sorted List")]),t._v(" "),a("p",[t._v("Given a sorted linked list, delete all duplicates such that each element appear only once.")]),t._v(" "),a("p",[t._v("For example,")]),t._v(" "),a("p",[t._v("Given "),a("code",[t._v("1->1->2")]),t._v(", return "),a("code",[t._v("1->2")]),t._v(".")]),t._v(" "),a("p",[t._v("Given "),a("code",[t._v("1->1->2->3->3")]),t._v(", return "),a("code",[t._v("1->2->3")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("/**\n * @param {ListNode} head\n * @return {ListNode}\n */")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("deleteDuplicates")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("head"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" prev "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" current "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),a("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" prev"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      prev "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" prev"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    current "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  prev"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python","aria-hidden":"true"}},[t._v("#")]),t._v(" Python")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# Definition for singly-linked list.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# class ListNode(object):")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("#     def __init__(self, x):")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("#         self.val = x")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("#         self.next = None")]),t._v("\n\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Solution")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token builtin"}},[t._v("object")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("deleteDuplicates")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" head"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        :type head: ListNode\n        :rtype: ListNode\n        """')]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" head"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head\n\n        prev"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" current "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" head"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" current"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" current"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" prev"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                prev"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current\n                prev "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" prev"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            current "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n        prev"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head\n\n")])])])])}],!1,null,null,null);e.options.__file="README.md";s.default=e.exports}}]);