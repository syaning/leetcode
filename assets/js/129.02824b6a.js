(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{187:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"employee-importance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#employee-importance","aria-hidden":"true"}},[t._v("#")]),t._v(" Employee Importance")]),t._v(" "),s("p",[t._v("You are given a data structure of employee information, which includes the employee's "),s("strong",[t._v("unique id")]),t._v(", his "),s("strong",[t._v("importance value")]),t._v(" and his "),s("strong",[t._v("direct")]),t._v(" subordinates' id.")]),t._v(" "),s("p",[t._v("For example, employee 1 is the leader of employee 2, and employee 2 is the leader of employee 3. They have importance value 15, 10 and 5, respectively. Then employee 1 has a data structure like [1, 15, [2]], and employee 2 has [2, 10, [3]], and employee 3 has [3, 5, []]. Note that although employee 3 is also a subordinate of employee 1, the relationship is "),s("strong",[t._v("not direct")]),t._v(".")]),t._v(" "),s("p",[t._v("Now given the employee information of a company, and an employee id, you need to return the total importance value of this employee and all his subordinates.")]),t._v(" "),s("p",[s("strong",[t._v("Example 1:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Input: [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\nOutput: 11\nExplanation:\nEmployee 1 has importance value 5, and he has two direct subordinates: employee 2 and employee 3. They both have importance value 3. So the total importance value of employee 1 is 5 + 3 + 3 = 11.\n")])])]),s("p",[s("strong",[t._v("Note:")])]),t._v(" "),s("ol",[s("li",[t._v("One employee has at most one "),s("strong",[t._v("direct")]),t._v(" leader and may have several subordinates.")]),t._v(" "),s("li",[t._v("The maximum number of employees won't exceed 2000.")])]),t._v(" "),s("h2",{attrs:{id:"python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python","aria-hidden":"true"}},[t._v("#")]),t._v(" Python")]),t._v(" "),s("div",{staticClass:"language-Python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n# Employee info\nclass Employee:\n    def __init__(self, id, importance, subordinates):\n        # It\'s the unique id of each node.\n        # unique id of this employee\n        self.id = id\n        # the importance value of this employee\n        self.importance = importance\n        # the id of direct subordinates\n        self.subordinates = subordinates\n"""')]),t._v("\n\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Solution")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("getImportance")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" employees"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("id")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        :type employees: Employee\n        :type id: int\n        :rtype: int\n        """')]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("accum_importance")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _id"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" d"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_id"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subordinates"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" d"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_id"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("importance\n            importances "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("accum_importance"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" s "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" d"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_id"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subordinates"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" d"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_id"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("importance "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("sum")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("importances"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        data "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("e"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("id")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" e "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" e "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" employees"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" accum_importance"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("id")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])])}],!1,null,null,null);e.options.__file="README.md";a.default=e.exports}}]);