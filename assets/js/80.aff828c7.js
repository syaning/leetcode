(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{317:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"binary-tree-level-order-traversal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#binary-tree-level-order-traversal","aria-hidden":"true"}},[t._v("#")]),t._v(" Binary Tree Level Order Traversal")]),t._v(" "),s("p",[t._v("Given a binary tree, return the "),s("em",[t._v("level order")]),t._v(" traversal of its nodes' values. (ie, from left to right, level by level).")]),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),s("p",[t._v("Given binary tree "),s("code",[t._v("[3,9,20,null,null,15,7]")]),t._v(",")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    3\n   / \\\n  9  20\n    /  \\\n   15   7\n")])])]),s("p",[t._v("return its level order traversal as:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[\n  [3],\n  [9,20],\n  [15,7]\n]\n")])])]),s("h2",{attrs:{id:"javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("/**\n * @param {TreeNode} root\n * @return {number[][]}\n */")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{attrs:{class:"token function-variable function"}},[t._v("levelOrder")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("root"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" current "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" vals "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),s("span",{attrs:{class:"token keyword"}},[t._v("of")]),t._v(" current"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      vals"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        next"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        next"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    result"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vals"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    current "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" next\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python","aria-hidden":"true"}},[t._v("#")]),t._v(" Python")]),t._v(" "),s("div",{staticClass:"language-Python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# Definition for a binary tree node.")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# class TreeNode(object):")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("#     def __init__(self, x):")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("#         self.val = x")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("#         self.left = None")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("#         self.right = None")]),t._v("\n\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Solution")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("object")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("levelOrder")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        :type root: TreeNode\n        :rtype: List[List[int]]\n        """')]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" root"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        current"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" current"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            vals"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nxt "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" node "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" current"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vals"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    nxt"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    nxt"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            result"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vals"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            current "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" nxt\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n\n")])])])])}],!1,null,null,null);e.options.__file="README.md";n.default=e.exports}}]);