(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{213:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"odd-even-linked-list"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#odd-even-linked-list","aria-hidden":"true"}},[t._v("#")]),t._v(" Odd Even Linked List")]),t._v(" "),n("p",[t._v("Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.")]),t._v(" "),n("p",[t._v("You should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.")]),t._v(" "),n("p",[n("strong",[t._v("Example:")])]),t._v(" "),n("p",[t._v("Given "),n("code",[t._v("1->2->3->4->5->NULL")]),t._v(", return "),n("code",[t._v("1->3->5->2->4->NULL")]),t._v(".")]),t._v(" "),n("p",[n("strong",[t._v("Note:")])]),t._v(" "),n("ol",[n("li",[t._v("The relative order inside both the even and odd groups should remain as it was in the input.")]),t._v(" "),n("li",[t._v("The first node is considered odd, the second node even and so on ...")])]),t._v(" "),n("h2",{attrs:{id:"javascript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("/**\n * Definition for singly-linked list.\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("ListNode")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" val"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * @param {ListNode} head\n * @return {ListNode}\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("oddEvenList")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("head"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lastOdd "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" current "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" firstEven"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfirstEven "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastOdd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tlastOdd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tlastOdd "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastOdd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tcurrent"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastOdd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tlastOdd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstEven"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tcurrent "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"python"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python","aria-hidden":"true"}},[t._v("#")]),t._v(" Python")]),t._v(" "),n("div",{staticClass:"language-Python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("# Definition for singly-linked list.")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("ListNode")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token builtin"}},[t._v("object")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("__init__")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" x\n        self"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Solution")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token builtin"}},[t._v("object")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("oddEvenList")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" head"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        :type head: ListNode\n        :rtype: ListNode\n        """')]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("not")]),t._v(" head"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head\n\n        last_odd"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" current "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" head"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" current "),n("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            first_even "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" last_odd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            last_odd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            last_odd "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" last_odd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" last_odd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            last_odd"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" first_even\n            current "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head\n\n")])])])])}],!1,null,null,null);e.options.__file="README.md";s.default=e.exports}}]);