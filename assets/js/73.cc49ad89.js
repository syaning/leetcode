(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{307:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"reverse-linked-list-ii"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reverse-linked-list-ii","aria-hidden":"true"}},[t._v("#")]),t._v(" Reverse Linked List II")]),t._v(" "),a("p",[t._v("Reverse a linked list from position "),a("em",[t._v("m")]),t._v(" to "),a("em",[t._v("n")]),t._v(". Do it in-place and in one-pass.")]),t._v(" "),a("p",[t._v("For example:")]),t._v(" "),a("p",[t._v("Given "),a("code",[t._v("1->2->3->4->5->NULL")]),t._v(", "),a("em",[t._v("m")]),t._v(" = 2 and "),a("em",[t._v("n")]),t._v(" = 4,")]),t._v(" "),a("p",[t._v("return "),a("code",[t._v("1->4->3->2->5->NULL")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Note:")])]),t._v(" "),a("p",[t._v("Given "),a("em",[t._v("m")]),t._v(", "),a("em",[t._v("n")]),t._v(" satisfy the following condition:")]),t._v(" "),a("p",[t._v("1 ≤ "),a("em",[t._v("m")]),t._v(" ≤ "),a("em",[t._v("n")]),t._v(" ≤ length of list.")]),t._v(" "),a("h2",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("/**\n * @param {ListNode} head\n * @param {number} m\n * @param {number} n\n * @return {ListNode}\n */")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("reverseBetween")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dummy "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("ListNode")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  dummy"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tail "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" dummy\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" m"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    tail "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tail"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" revHead "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tail"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" m"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" temp "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" revHead"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n    revHead"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n    temp"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tail"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n    tail"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dummy"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python","aria-hidden":"true"}},[t._v("#")]),t._v(" Python")]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# Definition for singly-linked list.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# class ListNode(object):")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("#     def __init__(self, x):")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("#         self.val = x")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("#         self.next = None")]),t._v("\n\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Solution")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token builtin"}},[t._v("object")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("reverseBetween")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" head"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        :type head: ListNode\n        :type m: int\n        :type n: int\n        :rtype: ListNode\n        """')]),t._v("\n        tail "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" dummy "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ListNode"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("None")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        dummy"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("range")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            tail "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tail"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n\n        revHead "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tail"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("range")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            temp "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" revHead"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            revHead"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            temp"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tail"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            tail"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp\n\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dummy"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n\n")])])])])}],!1,null,null,null);e.options.__file="README.md";s.default=e.exports}}]);