(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{301:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"remove-duplicates-from-sorted-list-ii"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#remove-duplicates-from-sorted-list-ii","aria-hidden":"true"}},[t._v("#")]),t._v(" Remove Duplicates from Sorted List II")]),t._v(" "),n("p",[t._v("Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only "),n("em",[t._v("distinct")]),t._v(" numbers from the original list.")]),t._v(" "),n("p",[t._v("For example,")]),t._v(" "),n("p",[t._v("Given "),n("code",[t._v("1->2->3->3->4->4->5")]),t._v(", return "),n("code",[t._v("1->2->5")]),t._v(".")]),t._v(" "),n("p",[t._v("Given "),n("code",[t._v("1->1->1->2->3")]),t._v(", return "),n("code",[t._v("2->3")]),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"javascript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n * @param {ListNode} head\n * @return {ListNode}\n */")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("deleteDuplicates")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dummy "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("ListNode")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  dummy"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" current "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" dummy\n\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" val "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" val"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n      "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      current "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dummy"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("h2",{attrs:{id:"python"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python","aria-hidden":"true"}},[t._v("#")]),t._v(" Python")]),t._v(" "),n("div",{staticClass:"language-Python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("# Definition for singly-linked list.")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# class ListNode(object):")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("#     def __init__(self, x):")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("#         self.val = x")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("#         self.next = None")]),t._v("\n\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Solution")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token builtin"}},[t._v("object")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("deleteDuplicates")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" head"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        :type head: ListNode\n        :rtype: ListNode\n        """')]),t._v("\n        current "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" dummy "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ListNode"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("None")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        dummy"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                val "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val\n                "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" val"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                current "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dummy"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("next")]),t._v("\n\n")])])])])}],!1,null,null,null);e.options.__file="README.md";s.default=e.exports}}]);